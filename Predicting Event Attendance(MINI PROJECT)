import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Sample data (replace this with your actual dataset)
data = {
    'Marketing Budget': [1000, 2000, 3000, 4000, 5000],
    'Social Media Mentions': [50, 100, 150, 200, 250],
    'Email Campaigns': [2, 3, 4, 5, 6],
    'Event Attendance': [200, 300, 400, 500, 600]
}

df = pd.DataFrame(data)

# Separate features and target variable
X = df[['Marketing Budget', 'Social Media Mentions', 'Email Campaigns']]
y = df['Event Attendance']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and fit the model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict on test data
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)

# Predict attendance for a new event
new_event = [[3000, 150, 4]]  # Example: Marketing budget $3000, 150 social media mentions, 4 email campaigns
predicted_attendance = model.predict(new_event)
print("Predicted attendance for the new event:", predicted_attendance[0])
